server.port=8088

# Hibernate automatic schema creation
spring.jpa.hibernate.ddl-auto=none

# Enabling H2 Console
spring.h2.console.enabled=true

# Show all queries
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
logging.level.org.hibernate.type=trace

# H2 database settings
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# URL settings
spring.datasource.url=jdbc:h2:file:C:/projects/samples/data-initialization-demo/by-impl-ApplicationRunner/src/main/resources/data/employees;AUTO_SERVER=TRUE

#spring.datasource.url=jdbc:h2:mem:testdb
#jdbc:h2:./src/main/resources/data/employees;AUTO_SERVER=true

# Turn Statistics on
spring.jpa.properties.hibernate.generate_statistics=true
logging.level.org.hibernate.stat=debug

#this configs are necessary to create the table
spring.jpa.generate-ddl=true
spring.sql.init.platform=h2

# Script-based initialization is performed by default only for embedded databases, to always initialize a database using scripts, we'll have to use:
#spring.sql.init.mode=always

#If we still want to have both Hibernate automatic schema generation in conjugation with script-based schema creation and data population, we'll have to use:
#spring.jpa.defer-datasource-initialization=true

